services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.7
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

    labels:
      com.github.nginx-proxy.nginx: "true"
      
    networks:
      - tf_idf_network
    restart: always

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=haratian.gena@gmail.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - tf_idf_network
    restart: always

  db:
    image: postgres
    container_name: tf_idf-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network_backend

  web:
    build: .
    container_name: tf_idf_lesta
    expose:
      - "8000"
    ports:
      - "8000:8000"  
    environment:
      - VIRTUAL_HOST=app.grenka.uz
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=app.grenka.uz
      - LETSENCRYPT_EMAIL=haratian.gena@gmail.com

      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOW_ORIGINS=${ALLOW_ORIGINS}

      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SENDER_EMAIL=${SENDER_EMAIL}

    volumes:
      - alembic-data:/app/alembic/versions
      - static-data:/app/static
    depends_on:
      - db
    command: >
      sh -c "/wait-for-it.sh db:${DB_PORT} -- alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload --forwarded-allow-ips=${ALLOW_ORIGINS}"
    networks:
      - tf_idf_network
      - network_backend

    restart: always

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    expose:
      - "9000"
    ports:
      - "9000:9000"  
    environment:
      - VIRTUAL_HOST=portainer.grenka.uz
      - VIRTUAL_PORT=9000
      - LETSENCRYPT_HOST=portainer.grenka.uz
      - LETSENCRYPT_EMAIL=haratian.gena@gmail.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      - tf_idf_network
      - network_backend
      

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    expose:
      - "80"
    ports:
    - "5050:80"  
    environment:
      - VIRTUAL_HOST=pgadmin.grenka.uz
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=pgadmin.grenka.uz
      - LETSENCRYPT_EMAIL=haratian.gena@gmail.com

      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - tf_idf_network
      - network_backend

    restart: always

  postfix:
    image: boky/postfix
    container_name: postfix
    restart: always
    environment:
      - maildomain=grenka.uz
      - smtp_user=${SMTP_USER}:${SMTP_PASSWORD}
    networks:
      - tf_idf_network
      - network_backend
    expose:
      - "25"
    ports:
      - "2525:25"

volumes:
  alembic-data:
  postgres_data:
  static-data:
  portainer_data:
  pgadmin_data:

networks:
  network_backend:
    driver: bridge
  tf_idf_network:
    external: true
